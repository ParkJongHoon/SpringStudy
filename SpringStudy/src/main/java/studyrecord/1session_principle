객체지향 설계 원칙(SOLID)
S: SRP(The Single Responsibility Principle): 단일 책임 원칙
O: DCP(The Open Closed Principle): 개방 폐쇄 원칙
L: LSP(The Liskov Substitution Principle): 리스코프 치환 원칙
I: ISP(The Interface Segregation Principle): 인터페이스 분리 원칙
D: DIP(The Dependency Inversion Principle): 의존관계 역전 원칙

1) 개방 폐쇄 원칙(Open-Closed Principle): 
클래스나 모듈은 확장에는 열려 있어야 하고 변경에는 닫혀 있어야 한다.
-> 변경할 영역에서만 변경을 허용하고 그 외에 영역에는 변경이 영향을 
미치면 안된다
--> 클라이언트 Main 클래스에서 변경될 클래스를 교체하고 이미 구현된
UserDao에서 변경이 없어야 한다 이미 정의된 interface를 구현한 클래스를
확장에 사용한다.
1-1)  높은 응집도와 낮은 결합도(high coherence and low coupling)
-> 응집도가 높다는 건 하나의 모듈, 클래스가
 하나의 책임 또는 관심사에만 집중되어 있다는 뜻이다
--> 응집도가 높다는 건 변화가 일어날 때 해당 모듈에서 변하는 부분이
크다는 것으로 설명할 수 도 있다.
-> 낮은 결합도 하나의 변경이 발생할 때 마치 파문이 이는 것 처럼 여타
모듈과 객체로 변경에 대한 요구가 전파되지 않는 상태를 말한다
예) DB 설정정보를 클라이언트단 모듈로 분리하여 DB설정정보가 바뀌어도
UserDao 코드변경이 없게한다.